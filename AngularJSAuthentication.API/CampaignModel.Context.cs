//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AngularJSAuthentication.API
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CampaignEntities : DbContext
    {
        public CampaignEntities()
            : base("name=CampaignEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Campaign> Campaigns { get; set; }
    
        public virtual ObjectResult<usp_getQualifiedPassdown_Result> usp_getQualifiedPassdown(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_getQualifiedPassdown_Result>("usp_getQualifiedPassdown", idParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> usp_insertCustomer(Nullable<int> iD, string name, Nullable<int> prntID, Nullable<int> passPrnt, string email, string phone)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var prntIDParameter = prntID.HasValue ?
                new ObjectParameter("PrntID", prntID) :
                new ObjectParameter("PrntID", typeof(int));
    
            var passPrntParameter = passPrnt.HasValue ?
                new ObjectParameter("PassPrnt", passPrnt) :
                new ObjectParameter("PassPrnt", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("usp_insertCustomer", iDParameter, nameParameter, prntIDParameter, passPrntParameter, emailParameter, phoneParameter);
        }
    
        public virtual ObjectResult<usp_updateAncestorsKidCount_Result> usp_updateAncestorsKidCount(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_updateAncestorsKidCount_Result>("usp_updateAncestorsKidCount", idParameter);
        }
    }
}
